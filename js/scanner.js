var scannerInstanceNr = 0;

/**
 * Scan an array of urls and show the results on screen.
 * @param string[] urls
 * @param string[] files
 * @param bool showFilename
 * @returns {scanner}
 */
var scanner = function(urls, files, showFilename) {
    // Variable initialisations
    var id = ++scannerInstanceNr;
    var urlId = 0;

    // DOM manipulations
    $('body').append('<table style="width:100%;" id="scanner-' + id + '"></table>');

    /**
     *
     * @param bool found
     * @param callbackItem
     */
    var setResult = function(found, callbackItem) {
        if (found) {
            $(callbackItem).html('<img src="img/error.png" title="SECURITY LEAK!">');
        } else {
            $(callbackItem).html('<img src="img/check.png" title="Well done.">');
        }
        $('#extended-check').show();
    };

    /**
     *
     * @param string url
     * @param callbackItem
     */
    var scanUrl = function(url, displayUrl) {
        // Add to the DOM
        $('#scanner-' + id).append('<tr id="item-' + urlId + '"><td nowrap></td><td style="width:20px"><img src="img/checking.gif"></td></tr>');
        $('#scanner-' + id).find('#item-' + urlId + ' > td:eq(0)').text(displayUrl);
        var callbackItem = '#scanner-' + id + ' #item-' + urlId + ' > td:eq(1)';
        urlId++;

        // Perform the request
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
            if (xhr.readyState == 4) {
                var found = xhr.status == 200;
                setResult(found, callbackItem);
            }
        };
        xhr.open("GET", url, true);
        xhr.send();
    };

    // Add the items to scan
    for (var i in urls) {
        for (var j in files) {
            scanUrl(urls[i] + files[j], showFilename ? urls[i] + files[j] : urls[i]);
        }
    }

    /**
     * @var scanner
     */
    return this;
};